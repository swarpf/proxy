# Used as inspiration: https://github.com/caddyserver/caddy

name: proxy-ci

on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:

jobs:
  test:
    strategy:
      # Default is true, cancels jobs for other platforms in the matrix if one fails
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        # os: [ ubuntu-latest, macos-latest, windows-latest ]
        goVersion: [ 1.14.x ]

        # Set some variables per OS, usable via ${{ matrix.VAR }}
        # SWARPF_PROXY_BIN_PATH: the path to the compiled Caddy binary, for artifact publishing
        # SUCCESS: the typical value for $? per OS (Windows/pwsh returns 'True')
        include:
          - os: ubuntu-latest
            SWARPF_PROXY_BIN_PATH: ./cmd/proxy/proxy
            SUCCESS: 0

#          - os: macos-latest
#            SWARPF_PROXY_BIN_PATH: ./cmd/proxy/proxy
#            SUCCESS: 0
#
#          - os: windows-latest
#            SWARPF_PROXY_BIN_PATH: ./cmd/proxy/proxy.exe
#            SUCCESS: 'True'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.goVersion }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Print Go version and environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          # Calculate the short SHA1 hash of the git commit
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=go_cache::$(go env GOCACHE)"

      - name: Cache the build cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.vars.outputs.go_cache }}
          key: ${{ runner.os }}-go-ci-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-ci

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          # mkdir test-results

      - name: Build Proxy
        working-directory: ./cmd/proxy
        env:
          CGO_ENABLED: 0
        run: |
          go build -trimpath -ldflags="-w -s" -v

      - name: Publish Proxy Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: swaglogger_${{ runner.os }}_${{ steps.vars.outputs.short_sha }}
          path: ${{ matrix.SWARPF_PROXY_BIN_PATH }}

  test-plugins:
    strategy:
      # Default is true, cancels jobs for other platforms in the matrix if one fails
      fail-fast: false
      matrix:
        # os: [ ubuntu-latest, macos-latest, windows-latest ]
        os: [ ubuntu-latest ]
        goVersion: [ 1.14.x ]
        # plugin: [ debugout, swaglogger ]
        plugin: [ swaglogger ]

        include:
          - os: ubuntu-latest
            OS_BINARY_FILE_EXTENSION: ''
            SUCCESS: 0
#
#          - os: macos-latest
#            OS_BINARY_FILE_EXTENSION: ''
#            SUCCESS: 0
#
#          - os: windows-latest
#            OS_BINARY_FILE_EXTENSION: '.exe'
#            SUCCESS: 'True'

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.goVersion }}

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Print Go version and environment
        id: vars
        run: |
          printf "Using go at: $(which go)\n"
          printf "Go version: $(go version)\n"
          printf "\n\nGo environment:\n\n"
          go env
          printf "\n\nSystem environment:\n\n"
          env
          # Calculate the short SHA1 hash of the git commit
          echo "::set-output name=short_sha::$(git rev-parse --short HEAD)"
          echo "::set-output name=go_cache::$(go env GOCACHE)"

      - name: Cache the build cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.vars.outputs.go_cache }}
          key: ${{ runner.os }}-go-ci-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-ci

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build ${{ matrix.plugin }} Plugin
        working-directory: ./cmd/plugins/${{ matrix.plugin }}
        env:
          CGO_ENABLED: 0
        run: |
          go build -trimpath -ldflags="-w -s" -v

      - name: Publish Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.plugin }}_${{ runner.os }}_${{ steps.vars.outputs.short_sha }}
          path: ./cmd/plugins/${{ matrix.plugin }}/${{ matrix.plugin }}${{ matrix.OS_BINARY_FILE_EXTENSION }}

#  goreleaser-check:
#    runs-on: ubuntu-latest
#    steps:
#      - name: checkout
#        uses: actions/checkout@v2
#        with:
#          submodules: recursive
#      - uses: goreleaser/goreleaser-action@v2
#        with:
#          version: latest
#          args: check
#        env:
#          TAG: ${{ steps.vars.outputs.version_tag }}
